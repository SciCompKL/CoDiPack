#include <codi.hpp>

template <typename Tape>
std::vector<typename Tape::EvalHandle> primal_multiuseTextCreateEvalHandles(){

  std::vector<typename Tape::EvalHandle> evalHandles;
  using Impl = codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> >;

  evalHandles.resize(6);
  evalHandles[0] = Tape::StatementEvaluator::template createHandle<Impl, Impl, codi::AssignStatement<codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > >, codi::ComputeExpression<double, codi::OperationSin, codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > > > >>();
  evalHandles[1] = Tape::StatementEvaluator::template createHandle<Impl, Impl, codi::AssignStatement<codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > >, codi::ComputeExpression<double, codi::OperationAdd, codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > >, codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > > > >>();
  evalHandles[2] = Tape::StatementEvaluator::template createHandle<Impl, Impl, codi::AssignStatement<codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > >, codi::ComputeExpression<double, codi::OperationMultiply, codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > >, codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > > > >>();
  evalHandles[3] = Tape::StatementEvaluator::template createHandle<Impl, Impl, codi::AssignStatement<std::complex<codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > > >, codi::ComputeExpression<std::complex<double>, codi::OperationMultiply, std::complex<codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > > >, std::complex<codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > > > > >>();
  evalHandles[4] = Tape::StatementEvaluator::template createHandle<Impl, Impl, codi::AssignStatement<codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > >, codi::ComputeExpression<double, codi::OperationAdd, codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > >, codi::ComputeExpression<double, codi::OperationComplexNorm, std::complex<codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > > > > > >>();
  evalHandles[5] = Tape::StatementEvaluator::template createHandle<Impl, Impl, codi::AssignStatement<codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > >, codi::ActiveType<codi::PrimalValueReuseTape<codi::PrimalValueTapeTypes<double, double, codi::MultiUseIndexManager<int>, codi::InnerStatementEvaluator, codi::DefaultChunkedData> > > >>();

  return evalHandles;
}