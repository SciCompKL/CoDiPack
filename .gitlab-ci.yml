default:
  image: fedora:41
  timeout: 2h
  tags:
    - docker

variables:
  COMMON_PACKAGES: "diffutils binutils git"

codi-general:
  parallel:
    matrix:
      - COMPILER: ["g++", "clang++"]
  script:
    - dnf install -y $COMMON_PACKAGES $COMPILER
    - cd tests/general
    - export CXX=$COMPILER
    - make all -j12

codi-events:
  needs: ["codi-general"]
  parallel:
    matrix:
      - COMPILER: ["g++", "clang++"]
  script:
    - dnf install -y $COMMON_PACKAGES $COMPILER
    - cd tests/events
    - export CXX=$COMPILER
    - make all -j12

codi-functional:
  needs: ["codi-general"]
  parallel:
    matrix:
      - COMPILER: ["g++", "clang++"]
  script:
    - dnf install -y $COMMON_PACKAGES $COMPILER
    - cd tests/functional
    - export CXX=$COMPILER
    - make all -j12

codi-examples:
  needs: ["codi-general"]
  parallel:
    matrix:
      - COMPILER: ["g++", "clang++"]
  script:
    - dnf install -y $COMMON_PACKAGES $COMPILER
    - export CXX=$COMPILER
    - make examples -j12

opdi:
  needs: ["codi-general"]
  script:
    - dnf install -y $COMMON_PACKAGES g++
    - git clone --depth 1 --branch develop https://github.com/SciCompKL/OpDiLib.git
    - export CODI_DIR=$(pwd)/include
    - cd OpDiLib
    - export OPDI_DIR=$(pwd)/include
    - cd tests
    - export CXX=g++
    - make all

medi:
  needs: ["codi-general"]
  image: ubuntu:24.04
  script:
    - apt update && apt install -y $COMMON_PACKAGES build-essential openmpi-bin libopenmpi-dev
    - git clone --depth 1 --branch develop https://github.com/SciCompKL/MeDiPack.git
    - export CODI_DIR=$(pwd)
    - cd MeDiPack/tests
    - export OMPI_ALLOW_RUN_AS_ROOT=1
    - export OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
    - make all -j6
    - make all
